{"version":3,"sources":["webpack:///src/app/public/register/register.module.ts","webpack:///src/app/public/register/register-routing.module.ts","webpack:///src/app/public/register/register.page.scss","webpack:///src/app/public/register/register.page.ts","webpack:///src/app/public/register/confirmed.validator.ts","webpack:///src/app/public/register/register.page.html"],"names":["routes","path","component","RegisterPageModule","imports","forChild","declarations","RegisterPageRoutingModule","exports","RegisterPage","modalController","authService","navCtrl","formBuilder","router","alertService","credentialsForm","group","email","required","password","minLength","name","last_name","phone","pattern","mrn","confirm_password","cnp","maxLength","validator","dismiss","navigateByUrl","controls","register","value","subscribe","data","presentToast","selector","template","ConfirmedValidator","controlName","matchingControlName","formGroup","control","matchingControl","errors","confirmedValidator","setErrors"],"mappings":"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","file":"public-register-register-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { RegisterPageRoutingModule } from './register-routing.module';\r\n\r\nimport { RegisterPage } from './register.page';\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: RegisterPage\r\n  }\r\n];\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RegisterPageRoutingModule,\r\n    ReactiveFormsModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [RegisterPage]\r\n})\r\nexport class RegisterPageModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { RegisterPage } from './register.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: RegisterPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class RegisterPageRoutingModule {}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3B1YmxpYy9yZWdpc3Rlci9yZWdpc3Rlci5wYWdlLnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\r\nimport { ModalController, NavController } from '@ionic/angular';\r\nimport { LoginPage } from '../login/login.page';\r\nimport { AuthenticationService } from 'src/app/services/authentication.service';\r\nimport { NgForm } from '@angular/forms';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ConfirmedValidator } from './confirmed.validator';\r\nimport { Router } from '@angular/router';\r\nimport { AlertService } from 'src/app/services/alert.service';\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.page.html',\r\n  styleUrls: ['./register.page.scss'],\r\n})\r\n\r\nexport class RegisterPage implements OnInit {\r\n  credentialsForm: FormGroup;\r\n  constructor(private modalController: ModalController,\r\n    private authService: AuthenticationService,\r\n    private navCtrl: NavController,\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private alertService: AlertService\r\n    \r\n\r\n  ) { }\r\n  \r\n  ngOnInit() {\r\n    this.credentialsForm = this.formBuilder.group({\r\n      email: ['', [Validators.required, Validators.email]],\r\n      password: ['', [Validators.required, Validators.minLength(6)]],\r\n      name: ['', [Validators.required]],\r\n      last_name: ['', [Validators.required]],\r\n      phone: ['', [Validators.required,Validators.pattern('^[0-9]{10}$')]],\r\n      mrn: ['', []],\r\n      confirm_password: ['', [Validators.required]],\r\n      cnp: ['', [Validators.required, ,Validators.maxLength(13),Validators.pattern('(1[1-9][0-9]|2[1-9][0-9]|50[0-9]|60[9]|7[1-9][0-9]|8[1-9][0-9]){1}(0[1-9]|1[0-2]){1}(0[1-9]|1[0-9]|2[0-9]|3[0-1]){1}[0-9]{6}$')]],\r\n    },\r\n    {\r\n      validator: ConfirmedValidator('password', 'confirm_password')\r\n      \r\n    });\r\n  }\r\n  // Dismiss Register Modal\r\n  dismissRegister() {\r\n    this.modalController.dismiss();\r\n  }\r\n  // On Login button tap, dismiss Register modal and open login Modal\r\n  async loginModal() {\r\n    return this.router.navigateByUrl('/login');\r\n    // this.dismissRegister();\r\n  }\r\n  get f(){\r\n    return this.credentialsForm.controls;\r\n  }\r\n  onSubmit() {\r\n    // console.log('bine');\r\n    this.authService.register(this.credentialsForm.value).subscribe(\r\n      data => {  \r\n         if(data['message']!='Contul a fost creat cu succes!')\r\n        this.alertService.presentToast(data['message']);\r\n        else{\r\n        this.alertService.presentToast(data['message']);\r\n        return this.router.navigateByUrl('/login');\r\n        }\r\n          }\r\n    );\r\n  }\r\n  \r\n \r\n}\r\n","import { FormGroup } from '@angular/forms';\r\n    \r\nexport function ConfirmedValidator(controlName: string, matchingControlName: string){\r\n    return (formGroup: FormGroup) => {\r\n        const control = formGroup.controls[controlName];\r\n        const matchingControl = formGroup.controls[matchingControlName];\r\n        if (matchingControl.errors && !matchingControl.errors.confirmedValidator) {\r\n            return;\r\n        }\r\n        if (control.value !== matchingControl.value) {\r\n            matchingControl.setErrors({ confirmedValidator: true });\r\n        } else {\r\n            matchingControl.setErrors(null);\r\n        }\r\n    }\r\n}","export default \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    \\r\\n    <!-- <ion-button item-end color=\\\"danger\\\" (click)=\\\"dismissRegister()\\\">x</ion-button> -->\\r\\n    <ion-title>Inregistrare</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content padding>\\r\\n  <form [formGroup]=\\\"credentialsForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n  <!-- <form [formGroup]=\\\"credentialsForm2\\\" (ngSubmit)=\\\"register(form)\\\" > -->\\r\\n    <ion-item>\\r\\n        <ion-label position=\\\"floating\\\">Adresa de e-mail*</ion-label>\\r\\n        <ion-input  formControlName=\\\"email\\\"></ion-input>\\r\\n    </ion-item>\\r\\n  \\r\\n    <ion-item>\\r\\n      <ion-label position=\\\"floating\\\">Nume*</ion-label>\\r\\n      <ion-input  formControlName=\\\"last_name\\\"></ion-input>\\r\\n    </ion-item>\\r\\n\\r\\n    <ion-item>\\r\\n      <ion-label position=\\\"floating\\\">Prenume*</ion-label>\\r\\n      <ion-input  formControlName=\\\"name\\\"></ion-input>\\r\\n    </ion-item>\\r\\n  \\r\\n    <ion-item>\\r\\n      <ion-label position=\\\"floating\\\">Numar de telefon*</ion-label>\\r\\n      <ion-input  formControlName=\\\"phone\\\"></ion-input>\\r\\n    </ion-item>\\r\\n\\r\\n    <ion-item>\\r\\n      <ion-label position=\\\"floating\\\">MRN *pentru abonati</ion-label>\\r\\n      <ion-input   formControlName=\\\"mrn\\\"></ion-input>\\r\\n    </ion-item>\\r\\n\\r\\n    <ion-item>\\r\\n      <ion-label position=\\\"floating\\\">Cod numeric personal*</ion-label>\\r\\n      <ion-input  formControlName=\\\"cnp\\\"></ion-input>\\r\\n    </ion-item>\\r\\n  \\r\\n    <ion-item>\\r\\n      <ion-label position=\\\"floating\\\">Parola</ion-label>\\r\\n      <ion-input type=\\\"password\\\" formControlName=\\\"password\\\"></ion-input>\\r\\n    </ion-item>\\r\\n\\r\\n    <ion-item>\\r\\n      <ion-label position=\\\"floating\\\">Confirmare Parola</ion-label>\\r\\n      <ion-input type=\\\"password\\\" formControlName=\\\"confirm_password\\\" id=\\\"confirm_password\\\" ></ion-input>\\r\\n    </ion-item>\\r\\n\\r\\n    <div  class=\\\"error ion-padding\\\" *ngIf=\\\"f.confirm_password.errors?.confirmedValidator\\\">Parolele nu se potrivesc.</div>\\r\\n  \\r\\n    <ion-button type=\\\"submit\\\" [disabled]=\\\"!credentialsForm.valid\\\" expand=\\\"full\\\" color=\\\"danger\\\">Inregistrare!</ion-button>\\r\\n  </form>\\r\\n  <br>\\r\\n  <p align=\\\"center\\\" text-center>Ai deja un cont?</p>\\r\\n  <ion-button expand=\\\"full\\\" color=\\\"primary\\\" (click)=\\\"loginModal()\\\">Autentifica-te!</ion-button>\\r\\n</ion-content>  \\r\\n\\r\\n\\r\\n\";"]}