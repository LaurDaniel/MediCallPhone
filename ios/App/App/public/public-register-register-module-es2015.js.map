{"version":3,"sources":["./src/app/public/register/register.module.ts","./src/app/public/register/register-routing.module.ts","./src/app/public/register/register.page.scss","./src/app/public/register/register.page.ts","./src/app/public/register/confirmed.validator.ts","./src/app/public/register/register.page.html"],"names":[],"mappings":"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","file":"public-register-register-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { RegisterPageRoutingModule } from './register-routing.module';\r\n\r\nimport { RegisterPage } from './register.page';\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: RegisterPage\r\n  }\r\n];\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RegisterPageRoutingModule,\r\n    ReactiveFormsModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [RegisterPage]\r\n})\r\nexport class RegisterPageModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { RegisterPage } from './register.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: RegisterPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class RegisterPageRoutingModule {}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3B1YmxpYy9yZWdpc3Rlci9yZWdpc3Rlci5wYWdlLnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\r\nimport { ModalController, NavController } from '@ionic/angular';\r\nimport { LoginPage } from '../login/login.page';\r\nimport { AuthenticationService } from 'src/app/services/authentication.service';\r\nimport { NgForm } from '@angular/forms';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ConfirmedValidator } from './confirmed.validator';\r\nimport { Router } from '@angular/router';\r\nimport { AlertService } from 'src/app/services/alert.service';\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.page.html',\r\n  styleUrls: ['./register.page.scss'],\r\n})\r\n\r\nexport class RegisterPage implements OnInit {\r\n  credentialsForm: FormGroup;\r\n  constructor(private modalController: ModalController,\r\n    private authService: AuthenticationService,\r\n    private navCtrl: NavController,\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private alertService: AlertService\r\n    \r\n\r\n  ) { }\r\n  \r\n  ngOnInit() {\r\n    this.credentialsForm = this.formBuilder.group({\r\n      email: ['', [Validators.required, Validators.email]],\r\n      password: ['', [Validators.required, Validators.minLength(6)]],\r\n      name: ['', [Validators.required]],\r\n      last_name: ['', [Validators.required]],\r\n      phone: ['', [Validators.required,Validators.pattern('^[0-9]{10}$')]],\r\n      mrn: ['', []],\r\n      confirm_password: ['', [Validators.required]],\r\n      cnp: ['', [Validators.required, ,Validators.maxLength(13),Validators.pattern('(1[1-9][0-9]|2[1-9][0-9]|50[0-9]|60[9]|7[1-9][0-9]|8[1-9][0-9]){1}(0[1-9]|1[0-2]){1}(0[1-9]|1[0-9]|2[0-9]|3[0-1]){1}[0-9]{6}$')]],\r\n    },\r\n    {\r\n      validator: ConfirmedValidator('password', 'confirm_password')\r\n      \r\n    });\r\n  }\r\n  // Dismiss Register Modal\r\n  dismissRegister() {\r\n    this.modalController.dismiss();\r\n  }\r\n  // On Login button tap, dismiss Register modal and open login Modal\r\n  async loginModal() {\r\n    return this.router.navigateByUrl('/login');\r\n    // this.dismissRegister();\r\n  }\r\n  get f(){\r\n    return this.credentialsForm.controls;\r\n  }\r\n  onSubmit() {\r\n    // console.log('bine');\r\n    this.authService.register(this.credentialsForm.value).subscribe(\r\n      data => {  \r\n         if(data['message']!='Contul a fost creat cu succes!')\r\n        this.alertService.presentToast(data['message']);\r\n        else{\r\n        this.alertService.presentToast(data['message']);\r\n        return this.router.navigateByUrl('/login');\r\n        }\r\n          }\r\n    );\r\n  }\r\n  \r\n \r\n}\r\n","import { FormGroup } from '@angular/forms';\r\n    \r\nexport function ConfirmedValidator(controlName: string, matchingControlName: string){\r\n    return (formGroup: FormGroup) => {\r\n        const control = formGroup.controls[controlName];\r\n        const matchingControl = formGroup.controls[matchingControlName];\r\n        if (matchingControl.errors && !matchingControl.errors.confirmedValidator) {\r\n            return;\r\n        }\r\n        if (control.value !== matchingControl.value) {\r\n            matchingControl.setErrors({ confirmedValidator: true });\r\n        } else {\r\n            matchingControl.setErrors(null);\r\n        }\r\n    }\r\n}","export default \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    \\r\\n    <!-- <ion-button item-end color=\\\"danger\\\" (click)=\\\"dismissRegister()\\\">x</ion-button> -->\\r\\n    <ion-title>Inregistrare</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content padding>\\r\\n  <form [formGroup]=\\\"credentialsForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n  <!-- <form [formGroup]=\\\"credentialsForm2\\\" (ngSubmit)=\\\"register(form)\\\" > -->\\r\\n    <ion-item>\\r\\n        <ion-label position=\\\"floating\\\">Adresa de e-mail*</ion-label>\\r\\n        <ion-input  formControlName=\\\"email\\\"></ion-input>\\r\\n    </ion-item>\\r\\n  \\r\\n    <ion-item>\\r\\n      <ion-label position=\\\"floating\\\">Nume*</ion-label>\\r\\n      <ion-input  formControlName=\\\"last_name\\\"></ion-input>\\r\\n    </ion-item>\\r\\n\\r\\n    <ion-item>\\r\\n      <ion-label position=\\\"floating\\\">Prenume*</ion-label>\\r\\n      <ion-input  formControlName=\\\"name\\\"></ion-input>\\r\\n    </ion-item>\\r\\n  \\r\\n    <ion-item>\\r\\n      <ion-label position=\\\"floating\\\">Numar de telefon*</ion-label>\\r\\n      <ion-input  formControlName=\\\"phone\\\"></ion-input>\\r\\n    </ion-item>\\r\\n\\r\\n    <ion-item>\\r\\n      <ion-label position=\\\"floating\\\">MRN *pentru abonati</ion-label>\\r\\n      <ion-input   formControlName=\\\"mrn\\\"></ion-input>\\r\\n    </ion-item>\\r\\n\\r\\n    <ion-item>\\r\\n      <ion-label position=\\\"floating\\\">Cod numeric personal*</ion-label>\\r\\n      <ion-input  formControlName=\\\"cnp\\\"></ion-input>\\r\\n    </ion-item>\\r\\n  \\r\\n    <ion-item>\\r\\n      <ion-label position=\\\"floating\\\">Parola</ion-label>\\r\\n      <ion-input type=\\\"password\\\" formControlName=\\\"password\\\"></ion-input>\\r\\n    </ion-item>\\r\\n\\r\\n    <ion-item>\\r\\n      <ion-label position=\\\"floating\\\">Confirmare Parola</ion-label>\\r\\n      <ion-input type=\\\"password\\\" formControlName=\\\"confirm_password\\\" id=\\\"confirm_password\\\" ></ion-input>\\r\\n    </ion-item>\\r\\n\\r\\n    <div  class=\\\"error ion-padding\\\" *ngIf=\\\"f.confirm_password.errors?.confirmedValidator\\\">Parolele nu se potrivesc.</div>\\r\\n  \\r\\n    <ion-button type=\\\"submit\\\" [disabled]=\\\"!credentialsForm.valid\\\" expand=\\\"full\\\" color=\\\"danger\\\">Inregistrare!</ion-button>\\r\\n  </form>\\r\\n  <br>\\r\\n  <p align=\\\"center\\\" text-center>Ai deja un cont?</p>\\r\\n  <ion-button expand=\\\"full\\\" color=\\\"primary\\\" (click)=\\\"loginModal()\\\">Autentifica-te!</ion-button>\\r\\n</ion-content>  \\r\\n\\r\\n\\r\\n\";"],"sourceRoot":"webpack:///"}